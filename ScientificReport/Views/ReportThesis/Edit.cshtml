@model ScientificReport.DTO.Models.ReportThesis.ReportThesisEdit

@{
	ViewData["Title"] = "Edit";
}
<style type="text/css">
	.authors-list {
		overflow-y: scroll;
		height: 400px;
	}
	.text-green { color: rgb(0, 179, 0); }
	.text-red { color: rgb(177, 0, 0); }
	.hidden { display: none; }
</style>


<h4>ReportThesis</h4>
<hr/>
<div class="row">
	<div class="col-md-4">
		<form asp-action="Edit">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<input type="hidden" asp-for="ReportThesis.Id"/>
			<div class="form-group">
				<label asp-for="ReportThesis.Thesis" class="control-label"></label>
				<input asp-for="ReportThesis.Thesis" class="form-control"/>
				<span asp-validation-for="ReportThesis.Thesis" class="text-danger"></span>
			</div>
			<div class="form-group">
				<input type="submit" value="Save" class="btn btn-primary"/>
			</div>
		</form>
	</div>
	<div class="col-md-4">
		<h4>Authors:</h4>
		<div class="authors-list">
			@if (Model.Users != null)
			{
				foreach (var user in Model.Users)
				{
					if (user != null)
					{
						var exists = Model.Authors.Any(u => u.Id == user.Id);
						<p>
							@user.FirstName @user.LastName
							<i class="add-user fas fa-plus-circle fa-lg text-green @(exists ? "hidden" : "")" onclick="addAuthor(this, '@Model.ReportThesis.Id', '@user.Id')"></i>
							<i class="remove-user fas fa-minus-circle fa-lg text-red @(exists ? "" : "hidden")" onclick="deleteAuthor(this, '@Model.ReportThesis.Id', '@user.Id')"></i>
						</p>
					}
				}
			}
		</div>
	</div>
</div>


<div>
	<a asp-action="Index">Back to List</a>
</div>

<script>
	const toggleAuthor = (endpoint, tagName) => (tag, id, authorId) => {
		const config = {
			method: 'POST',
			body: JSON.stringify({
				AuthorId: authorId
			}),
			headers: {
				'Content-Type': 'application/json'
			}
		};
		fetch(`/ReportThesis/${endpoint}/${id}`, config).then(response => {
			console.log(response);
			if (response.status !== 200) throw { msg: "Failed to toggle the author", response };
			
			tag.classList.add('hidden');
			tag.parentElement.getElementsByClassName(tagName)[0].classList.remove('hidden');
		}).catch(e => {
			console.error(e);
		});
	}

	const addAuthor = toggleAuthor('AddAuthor', 'remove-user');
	const deleteAuthor = toggleAuthor('DeleteAuthor', 'add-user');
</script>