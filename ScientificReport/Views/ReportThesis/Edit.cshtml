@using Microsoft.AspNetCore.Mvc.Localization
@model ScientificReport.DTO.Models.ReportThesis.ReportThesisEdit
@inject IViewLocalizer Localizer

@{
	ViewData["Title"] = Localizer["Edit report thesis"];
}
<style type="text/css">
	.authors-list {
		overflow-y: scroll;
		height: 250px;
	}
	.text-green { color: rgb(0, 179, 0); }
	.text-red { color: rgb(177, 0, 0); }
	.hidden { display: none; }
	.cursor-pointer { cursor: pointer; }
</style>

<h5>@ViewData["Title"]</h5>
<hr/>
<div class="row">
	<div class="col s12">
		<form asp-action="Edit">
			<div asp-validation-summary="ModelOnly" class="validate"></div>
			<input type="hidden" asp-for="Id"/>
			<div class="row">
				<div class="input-field col s7">
					<input asp-for="Thesis" type="text" class="validate">
					<label asp-for="Thesis">@Localizer["Thesis"]</label>
					<span class="helper-text" asp-validation-for="Thesis" data-error="" data-success=""></span>
				</div>
				<div class="col s6">
					<h4>@Localizer["Authors"]:</h4>
					<div class="authors-list">
						@if (Model.Users != null)
						{
							foreach (var user in Model.Users)
							{
								if (user != null)
								{
									var exists = Model.Authors.Any(u => u.Id == user.Id);
									<p>
										@user.FullName
										<i class="add-user fas fa-plus-circle fa-lg cursor-pointer text-green @(exists ? "hidden" : "")" onclick="addAuthor(this, '@Model.Id', '@user.Id')"></i>
										<i class="remove-user fas fa-minus-circle fa-lg cursor-pointer text-red @(exists ? "" : "hidden")" onclick="deleteAuthor(this, '@Model.Id', '@user.Id')"></i>
									</p>
								}
							}
						}
					</div>
				</div>
			</div>
			<div class="row myButtons">
				<button type="submit" class="waves-effect btn-small accent-2">@Localizer["Save"]</button>
				<a asp-action="Index" class="waves-effect btn-small blue darken-3">@Localizer["Cancel"]</a>
			</div>
		</form>
	</div>
</div>

<script>
	const toggleAuthor = (endpoint, tagName) => (tag, id, authorId) => {
		const config = {
			method: 'POST',
			body: JSON.stringify({
				UserId: authorId
			}),
			headers: {
				'Content-Type': 'application/json'
			}
		};
		fetch(`/ReportThesis/${endpoint}/${id}`, config).then(response => {
//			console.log(response);
			if (response.status !== 200) throw { msg: "Failed to toggle the author", response };
			
			tag.classList.add('hidden');
			tag.parentElement.getElementsByClassName(tagName)[0].classList.remove('hidden');
		}).catch(e => {
			console.error(e);
		});
	}

	const addAuthor = toggleAuthor('AddAuthor', 'remove-user');
	const deleteAuthor = toggleAuthor('DeleteAuthor', 'add-user');
</script>
