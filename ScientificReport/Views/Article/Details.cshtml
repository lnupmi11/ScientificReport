@model ScientificReport.DTO.Models.Article.ArticleDetailsModel

@using Microsoft.AspNetCore.Mvc.Localization
@using ScientificReport.BLL.Interfaces
@using ScientificReport.Controllers.Utils

@inject IDepartmentService DepartmentService
@inject IViewLocalizer Localizer

@{
	ViewData["Title"] = Localizer["Details"];
}

<h3>@Localizer["Details"]</h3>

<div>
	<h5>@Localizer["Article"]</h5>
	<hr />
	<div class="row">
		<div class = "col s2">
			@Localizer[Html.DisplayNameFor(model => model.Article.Type)]
		</div>
		<div class = "col s10">
			@Html.DisplayFor(model => model.Article.Type)
		</div>
		<div class = "col s2">
			@Localizer[Html.DisplayNameFor(model => model.Article.Title)]
		</div>
		<div class = "col s10">
			@Html.DisplayFor(model => model.Article.Title)
		</div>
		<div class = "col s2">
			@Localizer[Html.DisplayNameFor(model => model.Article.LiabilityInfo)]
		</div>
		<div class = "col s10">
			@Html.DisplayFor(model => model.Article.LiabilityInfo)
		</div>
		<div class = "col s2">
			@Localizer[Html.DisplayNameFor(model => model.Article.DocumentInfo)]
		</div>
		<div class = "col s10">
			@Html.DisplayFor(model => model.Article.DocumentInfo)
		</div>
		<div class = "col s2">
			@Localizer[Html.DisplayNameFor(model => model.Article.PublishingPlace)]
		</div>
		<div class = "col s10">
			@Html.DisplayFor(model => model.Article.PublishingPlace)
		</div>
		<div class = "col s2">
			@Localizer[Html.DisplayNameFor(model => model.Article.PublishingHouseName)]
		</div>
		<div class = "col s10">
			@Html.DisplayFor(model => model.Article.PublishingHouseName)
		</div>
		<div class = "col s2">
			@Localizer[Html.DisplayNameFor(model => model.Article.PublishingYear)]
		</div>
		<div class = "col s10">
			@Html.DisplayFor(model => model.Article.PublishingYear)
		</div>
		<div class = "col s2">
			@Localizer[Html.DisplayNameFor(model => model.Article.IsPeriodical)]
		</div>
		<div class = "col s10">
			<span>@Localizer[(Model.Article.IsPeriodical ? "Yes" : "No")]</span>
		</div>
		<div class = "col s2">
			@Localizer[Html.DisplayNameFor(model => model.Article.Number)]
		</div>
		<div class = "col s10">
			@Html.DisplayFor(model => model.Article.Number)
		</div>
		<div class = "col s2">
			@Localizer[Html.DisplayNameFor(model => model.Article.PagesAmount)]
		</div>
		<div class = "col s10">
			@Html.DisplayFor(model => model.Article.PagesAmount)
		</div>
		<div class = "col s2">
			@Localizer[Html.DisplayNameFor(model => model.Article.IsPrintCanceled)]
		</div>
		<div class = "col s10">
			<span>@Localizer[(Model.Article.IsPrintCanceled ? "Yes" : "No")]</span>
		</div>
		<div class = "col s2">
			@Localizer[Html.DisplayNameFor(model => model.Article.IsRecommendedToPrint)]
		</div>
		<div class = "col s10">
			<span>@Localizer[(Model.Article.IsRecommendedToPrint ? "Yes" : "No")]</span>
		</div>
		@if (Model.Authors != null && Model.Authors.Any())
		{
			<dt class="col s2">
				@Localizer["Authors"]
			</dt>
			<dd class="col s10">
				<ul>
					@foreach (var author in Model.Authors)
					{
						<li>@author</li>
					}
				</ul>
			</dd>	
		}
	</div>
</div>
<div>
	@{
		var department = DepartmentService.Get(d => d.Staff.Any(s => s.UserName == User.Identity.Name));
		var isHeadOfDepartment = false;
		if (department != null)
		{
			isHeadOfDepartment = Model.Article.UserProfilesArticles.Any(p => department.Staff.Contains(p.Author));
		}
	}
	@if ((PageHelpers.IsAdmin(User) || isHeadOfDepartment || Model.Article.UserProfilesArticles.Any(p => p.Author.UserName == User.Identity.Name)) && Model.Article.PublishingYear == DateTime.Now.Year)
	{
		<a asp-action="Edit" asp-route-id="@Model.Article.Id" class="waves-effect btn-small waves-light">@Localizer["Edit"]</a>
	}
	<a asp-action="Index" class="btn-small blue darken-3">@Localizer["Back to List"]</a>
</div>
