@using Microsoft.AspNetCore.Mvc.Localization
@model ScientificReport.DTO.Models.Department.DepartmentIndexModel
@inject IViewLocalizer Localizer

@{
	ViewData["Title"] = Localizer["Departments"];
}

<h4>@ViewData["Title"]</h4>
<button type="button" class="waves-effect btn-small green darken-3" onclick="location.href = '@Url.Action("Create", "Department")'">@Localizer["Create"]</button>
<div class="row">
	<div class="col s12">
		<form asp-action="Index" method="get">
			<div class="row">
				<div class="input-field col s9 respBut">
					<input asp-for="TitleFilter" class="validate"/>
					<label asp-for="TitleFilter">@Localizer["Title filter"]</label>

				</div>
				<div class="col s3">
					<button type="submit" class="waves-effect btn-small waves-light">@Localizer["Filter"]</button>
				</div>
			</div>
		</form>
	</div>
</div>
<table class="responsive-table">
	<thead>
	<tr>
		<th>
			<a asp-action="Index" asp-route-SortBy="Title">@Localizer["Title"]</a>
		</th>
		<th>
			<a asp-action="Index" asp-route-SortBy="StaffCount">@Localizer["Staff number"]</a>
		</th>
		<th>
			<a asp-action="Index" asp-route-SortBy="TotalScientificWorksCount">@Localizer["Scientific works total"]</a>
		</th>
		<th></th>
	</tr>
	</thead>
	<tbody>
	@foreach (var item in Model.Departments)
	{
		<tr>
			<td>
				@Html.DisplayFor(modelItem => item.Title)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Staff.Count)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.ScientificWorks.Count)
			</td>
			<td>
				<a asp-action="Details" asp-route-id="@item.Id" class="waves-effect btn-small blue darken-3">@Localizer["Details"]</a>
				<a asp-action="Edit" asp-route-id="@item.Id" class="waves-effect btn-small waves-light">@Localizer["Edit"]</a>
				@if (item.Staff.Count == 1)
				{
					<form asp-action="Delete" asp-route-id="@item.Id" method="post" style="display: inline;">
						<button type="submit" class="waves-effect btn-small deep-orange darken-3">@Localizer["Delete"]</button>
					</form>
				}
			</td>
		</tr>
	}
	</tbody>
</table>
<ul class="pagination">
	@if (Model.ShowPrevious)
	{
		<li class="page-item">
			<a asp-action="Index" asp-route-currentpage="@(Model.CurrentPage - 1)" class="page-link">@Localizer["Previous"]</a>
		</li>
	}
	@if (Model.TotalPages > 1)
	{
		for (var i = 1; i <= Model.TotalPages; i++)
		{
			<li class="page-item @(i == Model.CurrentPage ? "active" : "")">
				<a asp-action="Index" asp-route-currentpage="@i" class="page-link">@i</a>
			</li>
		}
	}
	@if (Model.ShowNext)
	{
		<li class="page-item">
			<a asp-action="Index" asp-route-currentpage="@(Model.CurrentPage + 1)" class="page-link">@Localizer["Next"]</a>
		</li>
	}
</ul>


@section Scripts
{
	<script type="text/javascript">
		let respFilter = document.querySelector('.respBut');

         window.onResize = function() {
           if (window.innerWidth <= 600)
          	{
          		respFilter.classList.replace('s11', 's1');
          		
          }
        };
         
         let $homeIcon = $('.fa-iconname');
         
         $(window).resize(function() {
           if (window.innerWidth <= 1000) $homeIcon.addClass('lg-2x');
           else $homeIcon.removeClass('lg-2x');
         });
	</script>
}
