@using Microsoft.AspNetCore.Mvc.Localization
@model ScientificReport.DTO.Models.ScientificWorks.ScientificWorksEdit
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["Edit"];
}

<style type="text/css">
    .authors-list {
        overflow-y: scroll;
        height: 100px;
    }
 
    .text-green { color: rgb(0, 179, 0); }

    .text-red { color: rgb(177, 0, 0); }

    .hidden { display: none; }
</style>

<h5>@Localizer["ScientificWork"]</h5>
<hr/>
<div class="row">
    <div class="col s12">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="validate"></div>
            <input type="hidden" asp-for="ScientificWork.Id"/>
            <div class="row">
                <div class="input-field col s6">
                    <input asp-for="ScientificWork.Cypher" type="text" class="validate">
                    <label asp-for="ScientificWork.Cypher">@Localizer["Cypher"]</label>
                    <span class="helper-text" asp-validation-for="ScientificWork.Cypher" data-error="" data-success=""></span>
                </div>
            </div>
            <div class="row">
                <div class="input-field col s6">
                    <input asp-for="ScientificWork.Category" type="date" class="validate">
                    <label asp-for="ScientificWork.Category">@Localizer["Category"]</label>
                    <span class="helper-text" asp-validation-for="ScientificWork.Category" data-error="" data-success=""></span>
                </div>
            </div>
            <div class="row">
                <div class="input-field col s6">
                    <input asp-for="ScientificWork.Title" type="date" class="validate">
                    <label asp-for="ScientificWork.Title">@Localizer["Title"]</label>
                    <span class="helper-text" asp-validation-for="ScientificWork.Title" data-error="" data-success=""></span>
                </div>
            </div>
            <div class="row">
                <div class="input-field col s6">
                    <textarea asp-for="ScientificWork.Contents" class="materialize-textarea"></textarea>
                    <label asp-for="ScientificWork.Contents">@Localizer["Contents"]</label>
                    <span class="helper-text" asp-validation-for="ScientificWork.Contents" 
                          data-length="400" data-error="" data-success=""></span>
                </div>
            </div>
            <div class="row">
                <div class="col s6">
                    <h4>@Localizer["Create"]:</h4>
                    <div class="authors-list">
                        @if (Model.Users != null)
                        {
                            foreach (var user in Model.Users)
                            {
                                if (user != null)
                                {
                                    var exists = Model.Authors.Any(u => u.Id == user.Id);
                                    <p>
                                        @user.FirstName @user.LastName
                                        <i class="add-user fas fa-plus-circle fa-lg text-green @(exists ? "hidden" : "")" onclick="addAuthor(this, '@Model.ScientificWork.Id', '@user.Id')"></i>
                                        <i class="remove-user fas fa-minus-circle fa-lg text-red @(exists ? "" : "hidden")" onclick="deleteAuthor(this, '@Model.ScientificWork.Id', '@user.Id')"></i>
                                    </p>
                                }
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="row myButtons">
                <input type="submit" value="@Localizer["Create"]" class="waves-effect btn-small  amber accent-2"/>
                <a asp-action="Index" class="btn-small blue darken-3">@Localizer["Cancel"]</a>
            </div>
        </form>
    </div>
    
</div>

<script>    
    const toggleAuthor = (endpoint, tagName) => (tag, id, authorId) => {
        const config = {
            method: 'POST',
            body: JSON.stringify({
                AuthorId: authorId
            }),
            headers: {
                'Content-Type': 'application/json'
            }
        };
        fetch(`/ScientificWork/${endpoint}/${id}`, config).then(response => {
//            console.log(response);
            if (response.status !== 200) throw {msg: "Failed to toggle the author", response};
            tag.classList.add('hidden');
            tag.parentElement.getElementsByClassName(tagName)[0].classList.remove('hidden');
        }).catch(e => {
            console.error(e);
        });
    }

    const addAuthor = toggleAuthor('AddAuthor', 'remove-user');
    const deleteAuthor = toggleAuthor('DeleteAuthor', 'add-user');
</script>