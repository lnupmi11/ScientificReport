@using Microsoft.AspNetCore.Mvc.Localization
@model ScientificReport.DTO.Models.ScientificWorks.ScientificWorksEdit
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["Edit"];
}
<style type="text/css">
    .authors-list {
        overflow-y: scroll;
        height: 400px;
    }

    .text-green { color: rgb(0, 179, 0); }

    .text-red { color: rgb(177, 0, 0); }

    .hidden { display: none; }
</style>

<h4>@Localizer["ScientificWork"]</h4>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ScientificWork.Id"/>
            <div class="form-group">
                <label asp-for="ScientificWork.Cypher" class="control-label">@Localizer["Cypher"]</label>
                <input asp-for="ScientificWork.Cypher" class="form-control"/>
                <span asp-validation-for="ScientificWork.Cypher" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ScientificWork.Category" class="control-label">@Localizer["Category"]</label>
                <input asp-for="ScientificWork.Category" class="form-control"/>
                <span asp-validation-for="ScientificWork.Category" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ScientificWork.Title" class="control-label">@Localizer["Title"]</label>
                <input asp-for="ScientificWork.Title" class="form-control"/>
                <span asp-validation-for="ScientificWork.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ScientificWork.Contents" class="control-label">@Localizer["Contents"]</label>
                <input asp-for="ScientificWork.Contents" class="form-control"/>
                <span asp-validation-for="ScientificWork.Contents" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="@Localizer["Save"]" class="btn btn-primary"/>
            </div>
        </form>
    </div>
    <div class="col-md-4">
        <h4>@Localizer["Authors"]:</h4>
        <div class="authors-list">
            @if (Model.Users != null)
            {
                foreach (var user in Model.Users)
                {
                    if (user != null)
                    {
                        var exists = Model.Authors.Any(u => u.Id == user.Id);
                        <p>
                            @user.FirstName @user.LastName
                            <i class="add-user fas fa-plus-circle fa-lg text-green @(exists ? "hidden" : "")" onclick="addAuthor(this, '@Model.ScientificWork.Id', '@user.Id')"></i>
                            <i class="remove-user fas fa-minus-circle fa-lg text-red @(exists ? "" : "hidden")" onclick="deleteAuthor(this, '@Model.ScientificWork.Id', '@user.Id')"></i>
                        </p>
                    }
                }
            }
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">@Localizer["Back to List"]</a>
</div>

<script>    
    const toggleAuthor = (endpoint, tagName) => (tag, id, authorId) => {
        const config = {
            method: 'POST',
            body: JSON.stringify({
                AuthorId: authorId
            }),
            headers: {
                'Content-Type': 'application/json'
            }
        };
        fetch(`/ScientificWork/${endpoint}/${id}`, config).then(response => {
//            console.log(response);
            if (response.status !== 200) throw {msg: "Failed to toggle the author", response};
            tag.classList.add('hidden');
            tag.parentElement.getElementsByClassName(tagName)[0].classList.remove('hidden');
        }).catch(e => {
            console.error(e);
        });
    }

    const addAuthor = toggleAuthor('AddAuthor', 'remove-user');
    const deleteAuthor = toggleAuthor('DeleteAuthor', 'add-user');
</script>