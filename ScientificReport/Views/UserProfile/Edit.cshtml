@using Microsoft.AspNetCore.Mvc.Localization
@using ScientificReport.Controllers.Utils
@using ScientificReport.DAL.Entities.UserProfile
@using ScientificReport.DAL.Roles
@model ScientificReport.DTO.Models.UserProfile.UserProfileEditModel
@inject IViewLocalizer Localizer

@{
	ViewData["Title"] = Localizer["Edit user"];
	Layout = "_Layout";
}
<style>
	.span-label {
    	color: black;
    }
</style>
<div class="bg-primary m-1 p-1 text-white">
	<h5>@ViewData["Title"]</h5>
</div>
<div class="row">
	<div class="col s12">
		<form asp-action="Edit" method="post">
			<div asp-validation-summary="ModelOnly" class="validate"></div>
			<div class="row">
				<div class="input-field col s4">
					<input asp-for="LastName" type="text" class="validate">
					<label asp-for="LastName">@Localizer["Last name"]</label>
					<span class="helper-text" asp-validation-for="LastName" data-error="" data-success=""></span>
				</div>
				<div class="input-field col s4">
					<input asp-for="FirstName" type="text" class="validate">
					<label asp-for="FirstName">@Localizer["First name"]</label>
					<span class="helper-text" asp-validation-for="FirstName" data-error="" data-success=""></span>
				</div>
				<div class="input-field col s4">
					<input asp-for="MiddleName" type="text" class="validate">
					<label asp-for="MiddleName">@Localizer["Middle name"]</label>
					<span class="helper-text" asp-validation-for="MiddleName" data-error="" data-success=""></span>
				</div>
			</div>
			<div class="row">
				<div class="input-field col s4">
					<input asp-for="BirthYear" type="number" class="validate">
					<label asp-for="BirthYear">@Localizer["Birth year"]</label>
					<span class="helper-text" asp-validation-for="BirthYear" data-error="" data-success=""></span>
				</div>
				<div class="input-field col s4">
					<select asp-for="Sex" class="col s12 push-s2">
						<option value="None" disabled @(Model.Sex == UserProfile.SexValue.None ? "selected" : "")>@Localizer["None"]</option>
						<option value="Male" @(Model.Sex == UserProfile.SexValue.Male ? "selected" : "")>@Localizer["Male"]</option>
						<option value="Female" @(Model.Sex == UserProfile.SexValue.Female ? "selected" : "")>@Localizer["Female"]</option>
					</select>
					<label asp-for="Sex">@Localizer["Sex"]</label>
				</div>
				<div class="input-field col s4">
					<input asp-for="GraduationYear" type="number" class="validate">
					<label asp-for="GraduationYear">@Localizer["Graduation year"]</label>
					<span class="helper-text" asp-validation-for="GraduationYear" data-error="" data-success=""></span>
				</div>
			</div>
			<div class="row">
				<div class="input-field col s6">
					<input asp-for="ScientificDegree" type="text" class="validate">
					<label asp-for="ScientificDegree">@Localizer["Scientific degree"]</label>
					<span class="helper-text" asp-validation-for="ScientificDegree" data-error="" data-success=""></span>
				</div>
				<div class="input-field col s6">
					<input asp-for="YearDegreeGained" type="number" class="validate">
					<label asp-for="YearDegreeGained">@Localizer["Year degree gained"]</label>
					<span class="helper-text" asp-validation-for="YearDegreeGained" data-error="" data-success=""></span>
				</div>
			</div>
			<div class="row">
				<div class="input-field col s6">
					<input asp-for="AcademicStatus" type="text" class="validate">
					<label asp-for="AcademicStatus">@Localizer["Academic status"]</label>
					<span class="helper-text" asp-validation-for="AcademicStatus" data-error="" data-success=""></span>
				</div>
				<div class="input-field col s6">
					<input asp-for="YearDegreeAssigned" type="number" class="validate">
					<label asp-for="YearDegreeAssigned">@Localizer["Year degree assigned"]</label>
					<span class="helper-text" asp-validation-for="YearDegreeAssigned" data-error="" data-success=""></span>
				</div>
			</div>
			<div class="row">
				<div class="input-field col s4">
					<input asp-for="UserName" type="text" class="validate">
					<label asp-for="UserName">@Localizer["User name"]</label>
					<span class="helper-text" asp-validation-for="UserName" data-error="" data-success=""></span>
				</div>
				<div class="input-field col s4">
					<input asp-for="Email" type="email" class="validate">
					<label asp-for="Email">@Localizer["Email"]</label>
					<span class="helper-text" asp-validation-for="Email" data-error="" data-success=""></span>
				</div>
				<div class="input-field col s4">
					<input asp-for="PhoneNumber" type="text" class="validate">
					<label asp-for="PhoneNumber">@Localizer["Phone number"]</label>
					<span class="helper-text" asp-validation-for="PhoneNumber" data-error="" data-success=""></span>
				</div>
				@if (PageHelpers.IsAdminOrHead(User) && !Model.IsSelfEditing)
				{
					<label class="col s4">
						<input type="checkbox" class="filled-in" asp-for="IsApproved"/>
						<span>@Localizer["Is approved"]</span>
					</label>
					<label class="col s4">
						<input type="checkbox" class="filled-in" asp-for="IsActive"/>
						<span>@Localizer[Html.DisplayNameFor(model => model.IsActive)]</span>
					</label>
				}
			</div>
			@if (PageHelpers.IsAdmin(User))
			{
				<div class="row">
					<div class="col s8">
						<label>@Localizer["Roles"]:</label>
						<div class="authors-list">
							@if (Model.AllRoles != null && Model.UserRoles != null)
							{
								foreach (var role in Model.AllRoles)
								{
									if (role != null)
									{
										var contains = Model.UserRoles.Contains(role.Name);
										<p>
											@if (role.Name != UserProfileRole.Teacher && role.Name != UserProfileRole.HeadOfDepartment && Model.UserName != User.Identity.Name && !Model.IsHeadOfDepartment)
											{
												<label>
													<input class="filled-in" type="checkbox" onclick="clickManageUser(this, '@Model.UserId', '@role.Name')" @(contains ? "checked=\"checked\"" : "")/>
													<span class="span-label">@role.Name</span>
												</label>
											}
											else
											{
												<label>
													<input class="filled-in" type="checkbox" @(contains ? "checked=\"checked\"" : "") title="Unable to @(contains ? "remove" : "add") role" disabled="disabled"/>
													<span class="span-label">@role.Name</span>
												</label>
											}
											
										</p>
									}
								}
							}
						</div>
					</div>
				</div>
			}
			<div class="row">
				<button type="submit" class="waves-effect btn-small accent-2">@Localizer["Save"]</button>
				@if (PageHelpers.IsAdminOrHead(User))
				{
					<a asp-action="Index" class="waves-effect btn-small blue darken-3">@Localizer["Cancel"]</a>
				}
				else
				{
					<a asp-controller="UserProfile" asp-route-id="@Model.UserId" asp-action="Details" class="btn-small blue darken-3">@Localizer["Cancel"]</a>
				}
			</div>
		</form>
	</div>
</div>

@section Scripts {
	<script>
		let body = (value) => {
        	return {RoleName: value}
        };
		const clickManageUser = toggleCheckboxEntity('UserProfile', 'AddUserToAdministration', 'RemoveUserFromAdministration', body);
	</script>
	@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
