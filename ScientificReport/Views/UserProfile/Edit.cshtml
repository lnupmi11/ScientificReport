@using Microsoft.AspNetCore.Mvc.Localization
@using ScientificReport.DAL.Roles
@inject IViewLocalizer Localizer
@model ScientificReport.DTO.Models.UserProfile.UserProfileEditModel

@{
	ViewData["Title"] = Localizer["Edit"];
	Layout = "_Layout";
}

<style type="text/css">
	.roles-list {
		overflow-y: scroll;
		height: 400px;
	}
	.text-green { color: rgb(0, 179, 0); }
	.text-red { color: rgb(177, 0, 0); }
	.cursor-pointer { cursor: pointer; }
	.hidden { display: none; }
</style>

<div class="bg-primary m-1 p-1 text-white"><h4>@Localizer["Edit user"]</h4></div>
<div asp-validation-summary="All" class="text-danger"></div>
<form asp-action="Edit" method="post">
	<div class="row">
		<div class="col-md-4">
			<div class="form-group">
				<label asp-for="FirstName">@Localizer["FirstName"]</label>
				<input asp-for="FirstName" class="form-control"/>
				<span asp-validation-for="FirstName" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="MiddleName">@Localizer["MiddleName"]</label>
				<input asp-for="MiddleName" class="form-control"/>
				<span asp-validation-for="MiddleName" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="LastName">@Localizer["LastName"]</label>
				<input asp-for="LastName" class="form-control"/>
				<span asp-validation-for="LastName" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="PhoneNumber">@Localizer["PhoneNumber"]</label>
				<input asp-for="PhoneNumber" class="form-control"/>
				<span asp-validation-for="PhoneNumber" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="BirthYear">@Localizer["BirthYear"]</label>
				<input asp-for="BirthYear" class="form-control"/>
				<span asp-validation-for="BirthYear" class="text-danger"></span>
			</div>
		</div>
		<div class="col-md-4">
			<div class="form-group">
				<label asp-for="GraduationYear">@Localizer["GraduationYear"]</label>
				<input asp-for="GraduationYear" class="form-control"/>
				<span asp-validation-for="GraduationYear" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="ScientificDegree">@Localizer["ScientificDegree"]</label>
				<input asp-for="ScientificDegree" class="form-control"/>
				<span asp-validation-for="ScientificDegree" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="YearDegreeAssigned">@Localizer["YearDegreeAssigned"]</label>
				<input asp-for="YearDegreeAssigned" class="form-control"/>
				<span asp-validation-for="YearDegreeAssigned" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label>Roles:</label>
				<div class="authors-list">
					@if (Model.AllRoles != null && Model.UserRoles != null)
					{
						foreach (var role in Model.AllRoles)
						{
							if (role != null)
							{
								var contains = Model.UserRoles.Contains(role.Name);
								<p>
									@if (role.Name != UserProfileRole.Teacher && role.Name != UserProfileRole.HeadOfDepartment)
									{
										<i class="add-role fas fa-plus-circle fa-lg cursor-pointer text-green @(contains ? "hidden" : "")" onclick="addUserToAdministration(this, '@role.Name', '@Model.UserId')"></i>
										<i class="remove-role fas fa-minus-circle fa-lg cursor-pointer text-red @(contains ? "" : "hidden")" onclick="removeUserFromAdministration(this, '@role.Name', '@Model.UserId')"></i>	
									}
									else
									{
										<i class="fas fa-@(contains ? "minus" : "plus")-circle fa-lg" title="Unable to @(contains ? "remove" : "add") role"></i>
									}
									@Localizer[role.Name]
								</p>
							}
						}
					}
				</div>
			</div>
		</div>
		<div class="col-md-4">
			<div class="form-group">
				<label asp-for="AcademicStatus">@Localizer["AcademicStatus"]</label>
				<input asp-for="AcademicStatus" class="form-control"/>
				<span asp-validation-for="AcademicStatus" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="YearDegreeGained">@Localizer["YearDegreeGained"]</label>
				<input asp-for="YearDegreeGained" class="form-control"/>
				<span asp-validation-for="YearDegreeGained" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="UserName">@Localizer["UserName"]</label>
				<input asp-for="UserName" class="form-control"/>
				<span asp-validation-for="UserName" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Email">@Localizer["Email"]</label>
				<input asp-for="Email" class="form-control"/>
				<span asp-validation-for="Email" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="IsApproved">@Localizer["IsApproved"]</label>
				<input asp-for="IsApproved" class="form-control"/>
				<span asp-validation-for="IsApproved" class="text-danger"></span>
			</div>
		</div>
	</div>
	<button type="submit" class="btn btn-primary">@Localizer["Save"]</button>
	<a asp-action="Index" class="btn btn-secondary">@Localizer["Cancel"]</a>
</form>

<div>
	<a asp-action="Index">@Localizer["Back to List"]</a>
</div>

@section Scripts {
	<script>    
		const toggle = (endpoint, tagName) => (tag, roleName, userId) => {
			const config = {
				method: 'POST',
				body: JSON.stringify({
					RoleName: roleName
				}),
				headers: {
					'Content-Type': 'application/json'
				}
			};
			fetch(`/UserProfile/${endpoint}/${userId}`, config).then(response => {
				if (response.status !== 200) throw {msg: "Failed to toggle user roles", response};
				tag.classList.add('hidden');
				tag.parentElement.getElementsByClassName(tagName)[0].classList.remove('hidden');
			}).catch(e => {
				console.error(e);
			});
		}

		const addUserToAdministration = toggle('AddUserToAdministration', 'remove-role');
		const removeUserFromAdministration = toggle('RemoveUserFromAdministration', 'add-role');
	</script>
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
