@using Microsoft.AspNetCore.Mvc.Localization
@model ScientificReport.DTO.Models.Grant.GrantIndexModel
@inject IViewLocalizer Localizer

@{
	ViewData["Title"] = Localizer["Index"];
}

<h3>@Localizer["Grant"]</h3>

<p>
	<a asp-action="Create" class="waves-effect btn-small green darken-3">@Localizer["Create New"]</a>
</p>
<table class="responsive-table">
	<thead>
	<tr>
		<th></th>
	</tr>
	</thead>
	<tbody>
@foreach (var item in Model.Grants) {
		<tr>
			<td>
				<a asp-action="Details" asp-route-id="@item.Id" class="btn-small blue darken-3">@Localizer["Details"]</a>
				<a asp-action="Edit" asp-route-id="@item.Id" class="waves-effect btn-small waves-light">@Localizer["Edit"]</a>
				<form asp-action="Delete" asp-route-id="@item.Id" method="post" style="display: inline;">
					<button type="submit" class="waves-effect btn-small deep-orange darken-3">@Localizer["Delete"]</button>
				</form>
			</td>
		</tr>
}
	</tbody>
</table>
<ul class="pagination">
    @if (Model.ShowPrevious)
    {
        <li class="page-item">
            <a asp-action="Index" asp-route-currentpage="@(Model.CurrentPage - 1)" class="page-link">@Localizer["Previous"]</a>
        </li>
    }
    @if (Model.TotalPages > 1)
    {
        for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a asp-action="Index" asp-route-currentpage="@i" class="page-link">@i</a>
            </li>
        }
    }
    @if (Model.ShowNext)
    {
        <li class="page-item">
            <a asp-action="Index" asp-route-currentpage="@(Model.CurrentPage + 1)" class="page-link">@Localizer["Next"]</a>
        </li>
    }
</ul>
